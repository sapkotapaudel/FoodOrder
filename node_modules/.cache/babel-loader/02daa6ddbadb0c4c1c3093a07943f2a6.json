{"ast":null,"code":"var _jsxFileName = \"/Users/yanapaudel/Desktop/REACT/FoodOrderReact/src/components/Cart/Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\n\nconst Checkout = props => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const isEmpty = value => value.trim().length === '';\n\n  const fiveChar = value => value.trim().length !== 5;\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const cityIsValid = !isEmpty(enteredCity);\n    const codeIsValid = !fiveChar(enteredPostal);\n    setFormInputsValidity({\n      name: nameIsValid,\n      street: streetIsValid,\n      city: cityIsValid,\n      postalCode: codeIsValid\n    });\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && codeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      city: enteredCity,\n      code: enteredPostal,\n      street: enteredCity\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: nameControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    ref: nameInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), !formInputsValidity.name && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 38\n    }\n  }, \"Please enter a valid name!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: streetControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Street\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"street\",\n    ref: streetInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), !formInputsValidity.street && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 40\n    }\n  }, \"Please enter a valid street!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: postalControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"postal\",\n    ref: postalCodeInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), !formInputsValidity.postalCode && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 44\n    }\n  }, \"Please enter a valid postal code!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: cityControlClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"city\",\n    ref: cityInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), !formInputsValidity.city && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }\n  }, \"Please enter a valid city!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n};\n\nexport default Checkout;","map":{"version":3,"names":["React","useRef","useState","classes","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","isEmpty","value","trim","length","fiveChar","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","nameIsValid","streetIsValid","cityIsValid","codeIsValid","formIsValid","onConfirm","code","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","cityControlClasses","form","actions","onClick","submit"],"sources":["/Users/yanapaudel/Desktop/REACT/FoodOrderReact/src/components/Cart/Checkout.js"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport classes from './Checkout.module.css';\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name:true,\n        street: true,\n        city: true,\n        postalCode: true\n    })\n    const nameInputRef=useRef();\n    const streetInputRef=useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const isEmpty = (value) => value.trim().length ==='';\n    const fiveChar = (value) => value.trim().length !== 5;\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const nameIsValid = !isEmpty(enteredName)\n    const streetIsValid = !isEmpty(enteredStreet)\n    const cityIsValid = !isEmpty(enteredCity)\n    const codeIsValid = !fiveChar(enteredPostal)\n\n    setFormInputsValidity({name:nameIsValid,\n    street:streetIsValid,\n    city:cityIsValid,\n    postalCode: codeIsValid})\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid &&  codeIsValid;\n\n     if(!formIsValid)\n  {\n      return;\n  }\n\n     props.onConfirm({\n         name:enteredName,\n         city:enteredCity,\n         code: enteredPostal,\n         street:enteredCity\n     });\n  };\n\n  const nameControlClasses =`${classes.control} ${formInputsValidity.name ? '': classes.invalid}`\n  const streetControlClasses =`${classes.control} ${formInputsValidity.street ? '': classes.invalid}`\n  const postalControlClasses =`${classes.control} ${formInputsValidity.postalCode ? '': classes.invalid}`\n  const cityControlClasses =`${classes.control} ${formInputsValidity.city ? '': classes.invalid}`\n  \n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef}/>\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code!</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef }/>\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onClick}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}